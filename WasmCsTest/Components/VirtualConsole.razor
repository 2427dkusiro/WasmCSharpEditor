<style>
    #virtualConsole {
        width: 100%;
        background-color: black;
        color: white;
        font-family: Consolas, Monaco, 'Courier New', Courier, monospace !important;
    }
</style>

@if (CodeEditorContext.RunCodeState == Codes.RunCodeStatus.Running)
{
    <h4>仮想コンソール(実行中)</h4>
}
else
{
    <h4>仮想コンソール</h4>
}

<div>
    <textarea id="virtualConsole" spellcheck="false" readonly="readonly" @bind="text" rows="8" />
</div>

@code {
    private string text;

    [Parameter]
    public WasmCsTest.Codes.CodeEditorContext CodeEditorContext { get; set; }


    protected override void OnInitialized()
    {
        Action<string> action = (string str) =>
        {
            text += str ?? "";
            this.StateHasChanged();

        };
        CodeEditorContext.WriteStdOut = action;
        CodeEditorContext.WriteStdError = action;
        CodeEditorContext.AddUpdateUiCallBack(async () =>
        {
            StateHasChanged();
            await Task.Yield();
        });
    }
}
