@using System;
@using System.Collections.Generic;
@using System.Linq;

@using CodeRunner;
@using Codes;
@using Components;

@inject HttpClient Http;
@inject IJSRuntime JS;

@page "/CodeEdit"

<WasmCsTest.Components.CodeEditor @bind-UserCode="userCode" @bind-UserCode:event="OnChanged" CodeEditorContext="CodeEditorContext" />

@if (!CodeEditorContext.IsCodeCompiling)
{
    <button class="btn btn-primary" style="width:100%;" @onclick="OnRunButtonClicked">実行</button>
}
else
{
    <button class="btn btn-secondary" style="width:100%;">中断</button>
}

<hr />

<WasmCsTest.Components.CompileResult CodeEditorContext="CodeEditorContext" />

<WasmCsTest.Components.VirtualConsole CodeEditorContext="CodeEditorContext" />

@code{
    private string userCode;

    private CodeEditorContext CodeEditorContext;

    protected override async Task OnInitializedAsync()
    {
        CodeEditorContext = new CodeEditorContext(Http);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // CodeEditorContext.TryInitializing();
    }

    private async Task OnRunButtonClicked()
    {
        var result = await CodeEditorContext.Compile(userCode);
        this.StateHasChanged();
        if (result.IsSuccessed)
        {
            await CodeEditorContext.RunCode(result);
        }
    }
}
