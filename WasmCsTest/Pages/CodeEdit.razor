@using System;
@using System.Collections.Generic;
@using System.Linq;

@using Codes;

@inject HttpClient Http;
@inject IJSRuntime JS;
@inject CompileQueueService CompileQueue;

@page "/CodeEdit"

<style>
    .width-matchParent {
        width: 100%
    }
</style>

<WasmCsTest.Components.CodeEditor @bind-UserCode="userCode" @bind-UserCode:event="OnChanged" CodeEditorContext="CodeEditorContext" />

@if (CodeEditorContext.CompileState == CompileStatus.Completed || CodeEditorContext.CompileState == CompileStatus.Default)
{
    <button class="width-matchParent btn btn-primary" @onclick="OnRunButtonClicked">実行</button>
}
else
{
    <button class="width-matchParent btn btn-secondary">中断</button>
}

<hr />

<WasmCsTest.Components.CompileResult CodeEditorContext="CodeEditorContext" />

<hr />

<WasmCsTest.Components.VirtualConsole CodeEditorContext="CodeEditorContext" />

@code{
    private string userCode;
    private CodeEditorContext CodeEditorContext;

    protected override void OnInitialized()
    {
        CodeEditorContext = new CodeEditorContext(CompileQueue);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await CompileQueue.TryInitialize(JS, Http);
    }

    private async Task OnRunButtonClicked()
    {
        await CodeEditorContext.Compile(userCode);
        this.StateHasChanged();
        await Task.Delay(1);

        /*
        if (result.IsSuccessed)
        {
            var task = CodeEditorContext.RunCode(result);
            await task;
        }
        */
    }
}
